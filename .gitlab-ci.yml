image: python:3.10.0-alpine

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - python setup.py sdist bdist_wheel

deploy:
  stage: deploy
  script:
    - scp -r dist/* $SSH_USER@$IPADDRESS:$TEST_LOCATION




# stages:
#   - package

# package:
#   stage: package
#   image: python:3.10.0-alpine
#   only:
#     - development
#   script:
#     - python setup.py sdist bdist_wheel
#     - scp -r dist/* $SSH_USER@$IPADDRESS:$TEST_LOCATION


# # image: docker:stable
# # stages:
# #  - test
# #  - build

# # before-script:
# #   - apk add python python-dev python pip

# # test1:
# # stage: test
# # script:
# #   - pytest

# # build:
# # stage: build
# #  - docker build -t $IMAGE_TAG .
# #  - docker push $IMAGE_TAG


# # stages:
# #   - package

# # package:
# #   stage: package
# #   image: python:3.10.0-alpine
# #   # only:
# #     # - development
# #     # - merge_requests
# #   before_script:
# #     - apk add python python-dev python pip
# #     - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
# #     - eval $(ssh-agent -s)
# #     - ssh-add <(echo "$SSH_PRIVATE_KEY")
# #     - mkdir -p ~/.ssh
# #     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
# #   script:
# #     - pip install twine wheel
# #     - python setup.py sdist bdist_wheel
# #     # - twine upload dist/*
# #     - apt-get update -qq && apt-get install -y -qq lftp
# #     - scp -r dist/* $SSH_USER@$IPADDRESS:$TEST_LOCATION


# # stages:
# #   - build
# #   - deploy

# # build_package:
# #   stage: build
# #   image: python:3.10.0-alpine
# #   script:
# #     - python setup.py sdist bdist_wheel

# # deploy_to_remote:
# #   stage: deploy
# #   # image: docker:stable
# #   image: ubuntu:latest
# #   # before_script:
# #     # - apk add python python-dev python pip
# #   script:
# #     # - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
# #     # - eval $(ssh-agent -s)
# #     # - ssh-add <(echo "$SSH_PRIVATE_KEY")
# #     # - mkdir -p ~/.ssh
# #     # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

# #     - apt-get update && apt-get install -y openssh-client  # Install SSH client if needed
# #     - echo $SSH_USER
# #     - echo $IPADDRESS
# #     - echo $TEST_LOCATION
# #     - scp -r dist/* $SSH_USER@$IPADDRESS:$TEST_LOCATION
# #   # only:
# #     # - master  # Deploy only when changes are pushed to the master branch



# stages:
#   - build
#   # - deploy

# build_package:
#   stage: build
#   image: ubuntu:latest
#   before_script:
#     - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client python3 python3-dev python3-pip -y )'
#     - eval $(ssh-agent -s)
#     - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 --decode)
#     - mkdir -p ~/.ssh
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

#     # - apk add python3 python3-dev python3-pip
#     # - apt-get update && apt-get install -y openssh-client python3 python3-dev python3-pip
#     # python3 python3-dev python3-pip
#   script:
#     - python3 setup.py sdist bdist_wheel

# # deploy_to_remote:
#   # stage: deploy
#   # script:
#     # - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#     # - mkdir -p ~/.ssh
#     # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     # - echo $env:SSH_USER
#     # - echo $env:IPADDRESS
#     # - echo $env:TEST_LOCATION
#     # - echo $SSH_USER
#     # - echo $IPADDRESS
#     # - echo $TEST_LOCATION
#     # - eval $(ssh-agent -s)
#     # - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
#     - scp -r dist/* $env:SSH_USER@$env:IPADDRESS:$env:TEST_LOCATION
#   # only:
#     # - master  # Deploy only when changes are pushed to the master branch